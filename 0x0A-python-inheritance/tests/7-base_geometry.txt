The ``7-base_geometry`` module
============================

``integer_validator`` - validates integers
---------------------

This is the test file for 7-base_geometry.py.  First import
``integer_validator`` from the ``7-base_geometry`` module:

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
    >>> bg = BaseGeometry()

Testing it with proper use (string, int):
::
    >>> bg.integer_validator("my_int", 12)

Testing it with double str (string, string):
::
    >>> bg.integer_validator("name", "John")
    Traceback (most recent call last):
    TypeError: name must be an integer

Testing error message with double str (string, string):
::
    >>> bg.integer_validator("John's name", "John")
    Traceback (most recent call last):
    TypeError: John's name must be an integer

Testing it with 0 (string, int):
::
    >>> bg.integer_validator("age", 0)
    Traceback (most recent call last):
    ValueError: age must be greater than 0

Testing it with negative (string, int):
::
    >>> bg.integer_validator("age", 0)
    Traceback (most recent call last):
    ValueError: age must be greater than 0

Testing it without an argument (string):
::
    >>> bg.integer_validator("age")
    Traceback (most recent call last):
    TypeError: integer_validator() missing 1 required positional argument: 'value'
